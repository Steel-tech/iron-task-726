# Multi-stage production Dockerfile for API
# Optimized for security, performance, and minimal image size

# ==============================================
# Build Stage
# ==============================================
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    vips-dev \
    openssl \
    openssl-dev \
    libc6-compat

# Copy package files
COPY package*.json ./
COPY prisma ./prisma/

# Install dependencies (including dev dependencies for build)
RUN npm ci --include=dev

# Copy source code
COPY . .

# Generate Prisma client
RUN npx prisma generate

# Remove dev dependencies and clean npm cache
RUN npm prune --production && npm cache clean --force

# ==============================================
# Production Stage
# ==============================================
FROM node:18-alpine AS production

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S appuser -u 1001

# Set working directory
WORKDIR /app

# Install only runtime dependencies
RUN apk add --no-cache \
    vips \
    openssl \
    libc6-compat \
    dumb-init \
    curl

# Copy built application from builder stage
COPY --from=builder --chown=appuser:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=appuser:nodejs /app/package*.json ./
COPY --from=builder --chown=appuser:nodejs /app/prisma ./prisma/
COPY --from=builder --chown=appuser:nodejs /app/src ./src/

# Create directories for uploads and logs with proper permissions
RUN mkdir -p /app/uploads /app/logs /app/reports && \
    chown -R appuser:nodejs /app/uploads /app/logs /app/reports

# Set production environment
ENV NODE_ENV=production
ENV PORT=3001
ENV HOST=0.0.0.0

# Security: Don't run as root
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

# Expose port
EXPOSE 3001

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["node", "src/index.js"]