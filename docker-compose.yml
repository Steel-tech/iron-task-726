version: '3.8'

services:
  # PostgreSQL Database with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    container_name: fsw-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-fsw}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fsw_dev_password_2024}
      POSTGRES_DB: ${POSTGRES_DB:-fsw_iron_task}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fsw-network

  # Redis for queue management
  redis:
    image: redis:7-alpine
    container_name: fsw-redis
    ports:
      - "6379:6379"
    networks:
      - fsw-network

  # Node.js API
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: fsw-api
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-fsw}:${POSTGRES_PASSWORD:-fsw_dev_password_2024}@postgres:5432/${POSTGRES_DB:-fsw_iron_task}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret-minimum-32-chars-required-for-security}
      COOKIE_SECRET: ${COOKIE_SECRET:-dev-cookie-secret-minimum-32-chars-required}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      
      # Supabase (Primary - Development)
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
      
      # Legacy S3 Support (Development)
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-dev-key}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-dev-secret}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME:-fsw-iron-task-dev}
      AWS_REGION: ${AWS_REGION:-us-west-2}
    ports:
      - "3001:3001"
    volumes:
      - ./api:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - fsw-network
    command: npm run dev

  # Next.js Web Application
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: fsw-web
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
    ports:
      - "3000:3000"
    volumes:
      - ./web:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    networks:
      - fsw-network
    command: npm run dev

  # MinIO for local S3-compatible storage (Development only)
  minio:
    image: minio/minio
    container_name: fsw-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio_dev_user}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio_dev_password_2024}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - fsw-network
    command: server /data --console-address ":9001"

networks:
  fsw-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data: